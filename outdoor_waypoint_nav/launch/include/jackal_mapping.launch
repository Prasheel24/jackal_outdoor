<?xml version="1.0"?>
<launch>

  <arg name="database_path"     default="rtabmap.db"/>
  <arg name="rgbd_odometry"     default="false"/>

  <!-- <node pkg="tf" type="static_transform_publisher" name="base_link_to_base_laser" args="0.180 0.0 0.3015 0.0 0.0 0.0 1 /base_link /base_laser 40" />
  <node pkg="tf" type="static_transform_publisher" name="base_laser_to_scan" args="0.0 0.0 0.0635 0.0 0.0 0.0 1 /base_laser /scan 40" />
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_camera" args="0.160 0.0 0.358 0.0 0.0 0.0 1 /base_link /camera_bottom_screw_frame 40" /> -->

  <include file="$(find jackal_navigation)/launch/include/move_base.launch" />
  <group ns="rtabmap">

    <!-- Use RGBD synchronization -->
    <!-- Here is a general example using a standalone nodelet, 
         but it is recommended to attach this nodelet to nodelet 
         manager of the camera to avoid topic serialization -->
    <node pkg="nodelet" type="nodelet" name="rgbd_sync" args="standalone rtabmap_ros/rgbd_sync" output="screen">
      <remap from="rgb/image"       to="/camera/color/image_raw"/>
      <remap from="depth/image"     to="/camera/depth/image_rect_raw"/>
      <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
      <remap from="rgbd_image"      to="rgbd_image"/> <!-- output -->
      
      <!-- Should be true for not synchronized camera topics 
           (e.g., false for kinectv2, zed, realsense, true for xtion, kinect360)-->
      <param name="approx_sync"       value="false"/> 
    </node>
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
          <param name="frame_id" type="string" value="base_link"/>
          <param name="database_path"       type="string" value="$(arg database_path)"/>
          <param name="subscribe_depth" type="bool" value="false"/>
          <param name="subscribe_rgbd" type="bool" value="true"/>
          <param name="subscribe_scan" type="bool" value="true"/>

          <remap from="odom" to="/odometry/filtered"/>
          <remap from="scan" to="/scan"/>
          <remap from="rgbd_image" to="rgbd_image"/>

          <param name="queue_size" type="int" value="30"/>
<!-- Higher queue size implies flexible rate to sync for each of the three topics -->

          <!-- RTAB-Map's parameters -->
          <param name="RGBD/NeighborLinkRefining" type="string" value="true"/>
          <!-- Correct odometry using the input lidar topic using ICP -->
          <param name="RGBD/ProximityBySpace"     type="string" value="true"/>
          <!--  Find local loop closures based on the robot position in the map -->
          <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
          <!--  The robot should move to update the map (if not 0).  -->
          <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
          <!--  The robot should move to update the map (if not 0).  -->
          <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
          <!-- By setting to false (which is the default), on loop closures the graph will be optimized from the first pose in the map -->
          <param name="Grid/FromDepth"            type="string" value="false"/> <!-- occupancy grid from lidar -->
          <param name="Reg/Force3DoF"             type="string" value="true"/>
          <!-- Rill, pitch, altitude(z) won't be estimated -->
          <param name="Reg/Strategy"              type="string" value="1"/> <!-- 1=ICP -->
          
          <!-- ICP parameters -->
          <!-- <param name="Icp/VoxelSize"                 type="string" value="0.01"/> -->
          <!-- Scans filtered down to voxel of 5cm before ICP -->
          <param name="Icp/MaxCorrespondenceDistance" type="string" value="0.05"/>
          <!-- Max distance between points during registration by ICP -->
          <param name="Icp/CorrespondenceRatio"      type="string" value="0.1"/>
          <param name="use_action_for_goal" type="bool" value="true"/>
          <remap from="move_base"            to="/move_base"/>
          <remap from="grid_map" to="/map"/>
          <param name="Odom/Strategy" value="1"/>
          <!-- To change odom frame to frame to frame for faster odom -->
          <param name="Vis/CorType" value="0"/>
          <!-- 0 - feature matching 1 - Optical Flow -->          
          <!-- <param name="OdomF2M/MaxSize" type="string" value="2000"/> -->
          <!-- maximum features map size, default 2000 -->
          <!-- <param name="Vis/MaxFeatures" type="string" value="1000"/> -->
          <!-- maximum features extracted by image, default 1000 -->

          <!-- <param name="Rtabmap/StartNewMapOnLoopClosure" value="true"/> -->
          <!-- To start a new map on loop closure -->
          <!-- <param name="Reg/Force3DoF"    value="true" /> -->
          <!-- <param name="Optimizer/Slam2D" value="true" /> -->
          <!-- To work only in 2D -->
          
          <param name="grid_size" type="double" value="100"/> 
          <!-- 50 meters wide -->
          
          <param name="cloud_noise_filtering_radius" value="0.05"/>
          <param name="cloud_noise_filtering_min_neighbors" value="2"/>
          <!-- Reduce PCL noises -->

    </node>
        <!-- <node pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry">
            <param name="GFTT/MinDistance" type="string" value="10"/>
            <param name="Odom/ResetCountdown"              value="1" />
            <param name="Reg/Force3DoF"    value="true" />
    </node> -->
<!--     <node if="$(arg rgbd_odometry)" pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
      <param name="frame_id"                    type="string" value="base_link"/>
      <param name="wait_for_transform_duration" type="double" value="0.2"/>
      <param name="Reg/Force3DoF"               type="string" value="true"/>
      <param name="Vis/InlierDistance"          type="string" value="0.05"/>
      <param name="GFTT/MinDistance" type="string" value="10"/>
      <remap from="rgb/image"       to="/camera/color/image_raw"/>
      <remap from="depth/image"     to="/camera/depth/image_rect_raw"/>
      <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
    </node> -->
        <!-- visualization with rtabmapviz -->
    <!-- <node pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
      <param name="subscribe_depth"             type="bool" value="true"/>
      <param name="subscribe_scan"              type="bool" value="true"/>
      <param name="frame_id"                    type="string" value="base_link"/>
      <param name="wait_for_transform_duration" type="double" value="0.2"/>
    
      <remap from="rgb/image"       to="/camera/color/image_raw"/>
      <remap from="depth/image"     to="/camera/depth/image_rect_raw"/>
      <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
      <remap from="scan"            to="/scan"/>
    </node> -->
  </group>

</launch>